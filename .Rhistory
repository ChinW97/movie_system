stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
View(res)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(results)
}
res <- recomendar(selected_movie, dissimilarity, movies)
#return(recomendaciones[1:n_recommendation,])
return(watched_movie)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(watched_movie)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
View(selected_movie)
View(selected_movie)
k <- movies[movies$movie_id == "id.93119", ]
View(k)
View(k)
k <- movies[movies$movie_id == "id.69049", ]
selected_movie <- selected_movie[selected_movie$movie_id == "id.69049", ]
selected_movie$movie_id<- paste0("id.", selected_movie$movie_id)
movies$movie_id <- paste0("id.", movies$movie_id)
selected_movie <- read.csv("result.csv")
selected_movie <- data.frame(movie_id = selected_movie$movie_id, rating = selected_movie$averageRating)
selected_movie <- selected_movie[selected_movie$movie_id == "id.69049", ]
selected_movie$movie_id<- paste0("id.", selected_movie$movie_id)
selected_movie <- read.csv("result.csv")
selected_movie <- data.frame(movie_id = selected_movie$movie_id, rating = selected_movie$averageRating)
selected_movie <- selected_movie[selected_movie$movie_id == "69049", ]
selected_movie$movie_id<- paste0("id.", selected_movie$movie_id)
movies$movie_id <- paste0("id.", movies$movie_id)
movie_distance <- movies[1:10000,c('movie_id', 'genre', 'averageRating')]
movie_distance$movie_id <- as.factor(movie_distance$movie_id)
movie_distance$genre <- as.factor(movie_distance$genre)
movie_distance$averageRating <- as.factor(movie_distance$averageRating)
dissimilarity <- daisy(movie_distance, metric = "gower", weights = c(2, 1, 0.7))
dissimilarity <- as.matrix(dissimilarity)
row.names(dissimilarity) <- movies$movie_id[1:10000]
colnames(dissimilarity) <- movies$movie_id[1:10000]
dissimilarity[1:10, 1:10]
movies <- read.csv("recommendation.csv")
movies$movie_id <- paste0("id.", movies$movie_id)
movie_distance <- movies[1:10000,c('movie_id', 'genre', 'averageRating')]
movie_distance$movie_id <- as.factor(movie_distance$movie_id)
movie_distance$genre <- as.factor(movie_distance$genre)
movie_distance$averageRating <- as.factor(movie_distance$averageRating)
dissimilarity <- daisy(movie_distance, metric = "gower", weights = c(2, 1, 0.7))
dissimilarity <- as.matrix(dissimilarity)
row.names(dissimilarity) <- movies$movie_id[1:10000]
colnames(dissimilarity) <- movies$movie_id[1:10000]
dissimilarity[1:10, 1:10]
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(selected_movie_indexes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(results)
}
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(results)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(results)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(recommandations)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(recommendations)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(results)
}
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
names(results)[1] <- "dissimilarity"
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(results)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity")
#return(recomendaciones[1:n_recommendation,])
return(results)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id"))
#return(recomendaciones[1:n_recommendation,])
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
View(movies)
View(selected_movie)
#selected_movie <- read.csv("result.csv")
#selected_movie <- data.frame(movie_id = selected_movie$movie_id, rating = selected_movie$averageRating)
#selected_movie$movie_id<- paste0("id.", selected_movie$movie_id)
selected_movie[nrow(selected_movie)+1, ] = c("id.360556", 3)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id"))
#return(recomendaciones[1:n_recommendation,])
return(results)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id"))
#return(recomendaciones[1:n_recommendation,])
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating) %>%
arrange(desc(weighted_score > 0)) %>%
group_by(recommended_movie) %>% slice(1) %>%
arrange(desc(weighted_score))
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendationes <- results %>%
pivot_longer(cols = c(-"recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating) %>%
arrange(desc(weighted_score > 0)) %>%
group_by(recommended_movie) %>% slice(1) %>%
arrange(desc(weighted_score))
return(recomendationes)
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating) %>%
arrange(desc(weighted_score > 0)) %>%
group_by(recommended_movie) %>% slice(1) %>%
arrange(desc(weighted_score))
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating) %>%
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating) %>%
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating)
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
)
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating)
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
selected_movie$rating <- as.numeric(selected_movie$rating)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating)
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating) %>%
arrange(desc(weighted_score > 0)) %>%
group_by(recommended_movie) %>% slice(1) %>%
arrange(desc(weighted_score))
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
res2 <- data.frame(movie_id = substring(res$recommended_movie, 4))
View(res2)
View(movies)
selected_movie <- read.csv("result.csv")
selected_movie <- data.frame(movie_id = selected_movie$movie_id, rating = selected_movie$averageRating)
selected_movie$movie_id<- paste0("id.", selected_movie$movie_id)
selected_movie$rating <- as.numeric(selected_movie$rating)
recomendar <- function(selected_movies, dissimilarity_matrix, movies, n_recommendation = 5){
selected_movie_indexes <- which(colnames(dissimilarity_matrix) %in% selected_movies$movie_id)
results <- data.frame(dissimilarity_matrix[,selected_movie_indexes],
recommended_movie = row.names(dissimilarity_matrix),
stringsAsFactors = FALSE)
recomendaciones <- results %>%
pivot_longer(cols = c(- "recommended_movie"), names_to = "watched_movie",
values_to = "dissimilarity") %>%
left_join(selected_movies, by = c("watched_movie" = "movie_id")) %>%
arrange(desc(dissimilarity)) %>%
filter(recommended_movie != watched_movie) %>%
filter(!is.na(rating)) %>%
mutate(
similarity = 1 - dissimilarity,
weighted_score = similarity * rating) %>%
arrange(desc(weighted_score > 0)) %>%
group_by(recommended_movie) %>% slice(1) %>%
arrange(desc(weighted_score))
return(recomendaciones[1:n_recommendation,])
}
res <- recomendar(selected_movie, dissimilarity, movies)
View(res)
View(selected_movie)
